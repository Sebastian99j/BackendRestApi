// <auto-generated />
using System;
using BackendRestApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendRestApi.Migrations
{
    [DbContext(typeof(AIContext))]
    [Migration("20250424210351_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackendRestApi.Models.TrainingSeries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BreaksInSeconds")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DateTime")
                        .HasColumnType("date");

                    b.Property<int?>("RPE")
                        .HasColumnType("int");

                    b.Property<int?>("Reps")
                        .HasColumnType("int");

                    b.Property<int?>("Sets")
                        .HasColumnType("int");

                    b.Property<bool?>("Trained")
                        .HasColumnType("bit");

                    b.Property<int?>("TrainingTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TrainingTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("TrainingSeries");
                });

            modelBuilder.Entity("BackendRestApi.Models.TrainingTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrainingTypes");
                });

            modelBuilder.Entity("BackendRestApi.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AiIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BackendRestApi.Models.TrainingSeries", b =>
                {
                    b.HasOne("BackendRestApi.Models.TrainingTypes", "TrainingType")
                        .WithMany("TrainingSeries")
                        .HasForeignKey("TrainingTypeId");

                    b.HasOne("BackendRestApi.Models.Users", "User")
                        .WithMany("TrainingSeries")
                        .HasForeignKey("UserId");

                    b.Navigation("TrainingType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BackendRestApi.Models.TrainingTypes", b =>
                {
                    b.Navigation("TrainingSeries");
                });

            modelBuilder.Entity("BackendRestApi.Models.Users", b =>
                {
                    b.Navigation("TrainingSeries");
                });
#pragma warning restore 612, 618
        }
    }
}
